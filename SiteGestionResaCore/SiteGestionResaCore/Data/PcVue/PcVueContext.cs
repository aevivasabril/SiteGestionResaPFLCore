// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace SiteGestionResaCore.Data.PcVue
{
    public partial class PcVueContext : DbContext
    {
        public PcVueContext()
        {
        }

        public PcVueContext(DbContextOptions<PcVueContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AICommonParameters> AICommonParameters { get; set; }
        public virtual DbSet<tab_LOG_TRACA> tab_LOG_TRACA { get; set; }
        public virtual DbSet<tab_UA_ACT> tab_UA_ACT { get; set; }
        public virtual DbSet<tab_UA_CUV> tab_UA_CUV { get; set; }
        public virtual DbSet<tab_UA_ECR> tab_UA_ECR { get; set; }
        public virtual DbSet<tab_UA_ENG> tab_UA_ENG { get; set; }
        public virtual DbSet<tab_UA_EVAA> tab_UA_EVAA { get; set; }
        public virtual DbSet<tab_UA_EVAB> tab_UA_EVAB { get; set; }
        public virtual DbSet<tab_UA_GP7> tab_UA_GP7 { get; set; }
        public virtual DbSet<tab_UA_MAT> tab_UA_MAT { get; set; }
        public virtual DbSet<tab_UA_MFMG> tab_UA_MFMG { get; set; }
        public virtual DbSet<tab_UA_MTH> tab_UA_MTH { get; set; }
        public virtual DbSet<tab_UA_NEP> tab_UA_NEP { get; set; }
        public virtual DbSet<tab_UA_OPTIMAL> tab_UA_OPTIMAL { get; set; }
        public virtual DbSet<tab_UA_SAL> tab_UA_SAL { get; set; }
        public virtual DbSet<tab_UA_SEC> tab_UA_SEC { get; set; }
        public virtual DbSet<tab_UA_SPI> tab_UA_SPI { get; set; }
        public virtual DbSet<tab_UA_VALO> tab_UA_VALO { get; set; }
        public virtual DbSet<tab_UA_UFMF> tab_UA_UFMF { get; set; }
        public virtual DbSet<tab_UA_ECREM> tab_UA_ECREM { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AICommonParameters>(entity =>
            {
                entity.HasNoKey();
            });

            modelBuilder.Entity<tab_LOG_TRACA>(entity =>
            {
                entity.HasKey(e => new { e.Chrono, e.LogList, e.EvtNumber, e.Name, e.Value, e.Quality })
                    .HasName("IX_LOG_tab_LOG_TRACA_PRIMARY");

                entity.Property(e => e.LogList)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.AssocLabel)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.EvtTitle)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TextParam)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.UserComment)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.ValueT)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tab_UA_ACT>(entity =>
            {
                entity.HasKey(e => new { e.Name, e.Chrono, e.Value, e.Quality })
                    .HasName("IX_TREND_tab_UA_ACT_PRIMARY")
                    .IsClustered(false);

                entity.HasIndex(e => e.Chrono)
                    .HasName("IX_TREND_tab_UA_ACT_CLUSTERED")
                    .IsClustered();

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tab_UA_CUV>(entity =>
            {
                entity.HasKey(e => new { e.Name, e.Chrono, e.Value, e.Quality })
                    .HasName("IX_TREND_tab_UA_CUV_PRIMARY")
                    .IsClustered(false);

                entity.HasIndex(e => e.Chrono)
                    .HasName("IX_TREND_tab_UA_CUV_CLUSTERED")
                    .IsClustered();

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tab_UA_ECR>(entity =>
            {
                entity.HasKey(e => new { e.Name, e.Chrono, e.Value, e.Quality })
                    .HasName("IX_TREND_tab_UA_ECR_PRIMARY")
                    .IsClustered(false);

                entity.HasIndex(e => e.Chrono)
                    .HasName("IX_TREND_tab_UA_ECR_CLUSTERED")
                    .IsClustered();

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tab_UA_ENG>(entity =>
            {
                entity.HasKey(e => new { e.Name, e.Chrono, e.Value, e.Quality })
                    .HasName("IX_TREND_tab_UA_ENG_PRIMARY")
                    .IsClustered(false);

                entity.HasIndex(e => e.Chrono)
                    .HasName("IX_TREND_tab_UA_ENG_CLUSTERED")
                    .IsClustered();

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tab_UA_EVAA>(entity =>
            {
                entity.HasKey(e => new { e.Name, e.Chrono, e.Value, e.Quality })
                    .HasName("IX_TREND_tab_UA_EVAA_PRIMARY")
                    .IsClustered(false);

                entity.HasIndex(e => e.Chrono)
                    .HasName("IX_TREND_tab_UA_EVAA_CLUSTERED")
                    .IsClustered();

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tab_UA_EVAB>(entity =>
            {
                entity.HasKey(e => new { e.Name, e.Chrono, e.Value, e.Quality })
                    .HasName("IX_TREND_tab_UA_EVAB_PRIMARY")
                    .IsClustered(false);

                entity.HasIndex(e => e.Chrono)
                    .HasName("IX_TREND_tab_UA_EVAB_CLUSTERED")
                    .IsClustered();

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tab_UA_GP7>(entity =>
            {
                entity.HasKey(e => new { e.Name, e.Chrono, e.Value, e.Quality })
                    .HasName("IX_TREND_tab_UA_GP7_PRIMARY")
                    .IsClustered(false);

                entity.HasIndex(e => e.Chrono)
                    .HasName("IX_TREND_tab_UA_GP7_CLUSTERED")
                    .IsClustered();

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tab_UA_MAT>(entity =>
            {
                entity.HasKey(e => new { e.Name, e.Chrono, e.Value, e.Quality })
                    .HasName("IX_TREND_tab_UA_MAT_PRIMARY")
                    .IsClustered(false);

                entity.HasIndex(e => e.Chrono)
                    .HasName("IX_TREND_tab_UA_MAT_CLUSTERED")
                    .IsClustered();

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tab_UA_MFMG>(entity =>
            {
                entity.HasKey(e => new { e.Name, e.Chrono, e.Value, e.Quality })
                    .HasName("IX_TREND_tab_UA_MFMG_PRIMARY")
                    .IsClustered(false);

                entity.HasIndex(e => e.Chrono)
                    .HasName("IX_TREND_tab_UA_MFMG_CLUSTERED")
                    .IsClustered();

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tab_UA_MTH>(entity =>
            {
                entity.HasKey(e => new { e.Name, e.Chrono, e.Value, e.Quality })
                    .HasName("IX_TREND_tab_UA_MTH_PRIMARY")
                    .IsClustered(false);

                entity.HasIndex(e => e.Chrono)
                    .HasName("IX_TREND_tab_UA_MTH_CLUSTERED")
                    .IsClustered();

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tab_UA_NEP>(entity =>
            {
                entity.HasKey(e => new { e.Name, e.Chrono, e.Value, e.Quality })
                    .HasName("IX_TREND_tab_UA_NEP_PRIMARY")
                    .IsClustered(false);

                entity.HasIndex(e => e.Chrono)
                    .HasName("IX_TREND_tab_UA_NEP_CLUSTERED")
                    .IsClustered();

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tab_UA_OPTIMAL>(entity =>
            {
                entity.HasKey(e => new { e.Name, e.Chrono, e.Value, e.Quality })
                    .HasName("IX_TREND_tab_UA_OPTIMAL_PRIMARY")
                    .IsClustered(false);

                entity.HasIndex(e => e.Chrono)
                    .HasName("IX_TREND_tab_UA_OPTIMAL_CLUSTERED")
                    .IsClustered();

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tab_UA_SAL>(entity =>
            {
                entity.HasKey(e => new { e.Name, e.Chrono, e.Value, e.Quality })
                    .HasName("IX_TREND_tab_UA_SAL_PRIMARY")
                    .IsClustered(false);

                entity.HasIndex(e => e.Chrono)
                    .HasName("IX_TREND_tab_UA_SAL_CLUSTERED")
                    .IsClustered();

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tab_UA_SEC>(entity =>
            {
                entity.HasKey(e => new { e.Name, e.Chrono, e.Value, e.Quality })
                    .HasName("IX_TREND_tab_UA_SEC_PRIMARY")
                    .IsClustered(false);

                entity.HasIndex(e => e.Chrono)
                    .HasName("IX_TREND_tab_UA_SEC_CLUSTERED")
                    .IsClustered();

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tab_UA_SPI>(entity =>
            {
                entity.HasKey(e => new { e.Name, e.Chrono, e.Value, e.Quality })
                    .HasName("IX_TREND_tab_UA_SPI_PRIMARY")
                    .IsClustered(false);

                entity.HasIndex(e => e.Chrono)
                    .HasName("IX_TREND_tab_UA_SPI_CLUSTERED")
                    .IsClustered();

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tab_UA_VALO>(entity =>
            {
                entity.HasKey(e => new { e.Name, e.Chrono, e.Value, e.Quality })
                    .HasName("IX_TREND_tab_UA_VALO_PRIMARY")
                    .IsClustered(false);

                entity.HasIndex(e => e.Chrono)
                    .HasName("IX_TREND_tab_UA_VALO_CLUSTERED")
                    .IsClustered();

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tab_UA_UFMF>(entity =>
            {
                entity.HasKey(e => new { e.Name, e.Chrono, e.Value, e.Quality })
                    .HasName("IX_TREND_tab_UA_UFMF_PRIMARY")
                    .IsClustered(false);

                entity.HasIndex(e => e.Chrono)
                    .HasName("IX_TREND_tab_UA_UFMF_CLUSTERED")
                    .IsClustered();

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tab_UA_ECREM>(entity =>
            {
                entity.HasKey(e => new { e.Name, e.Chrono, e.Value, e.Quality })
                    .HasName("IX_TREND_tab_UA_ECREM_PRIMARY")
                    .IsClustered(false);

                entity.HasIndex(e => e.Chrono)
                    .HasName("IX_TREND_tab_UA_ECREM_CLUSTERED")
                    .IsClustered();

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}