<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css"
      integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous" />

@model CalenViewModel

@{
    ViewData["Title"] = "CalendrierPFL";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<br />
<h1 class="text-center">Calendrier PFL</h1>
<br />

<div class="offset-2 col-md-8">
    <div class="card">
        <div class="card-body">
            <h5 class="card-title text-center">Code couleur calendrier PFL</h5>
            <div class="row">
                <div class="col-md-6">
                    <button style="background-color:#ffd191" disabled="True">Orange</button>
                    <label>Conflit entre 2 essais</label>
                </div>
                <div class="col-md-6">
                    <button style="background-color:#fdc0be" disabled="True">Rouge</button>
                    <label>Réservation essai validé</label>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <button style="background-color:#fbeed9" disabled="True">Beige</button>
                    <label>Essai en attente de validation</label>
                </div>
                <div class="col-md-6">
                    <button style="background-color:#c2e6e2" disabled="True">Vert</button>
                    <label>Equipement Disponible</label>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <button style="background-color:#ffffff" disabled="True">Blanc</button>
                    <label>Zone Disponible</label>
                </div>
                <div class="col-md-6">
                    <button style="background-color:#d8b1d4" disabled="True">Violet</button>
                    <label>Zone "occupée"</label>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <button style="background-color: #70cff0" disabled="True">Bleu</button>
                    <label>Intervention de maintenance</label>
                </div>
                <div class="col-md-6">
                    <button style="background-color: lightgray" disabled="True">Gris</button>
                    <label>Equipements dans une zone restreinte ou confidentielle</label>
                </div>
            </div>
        </div>
    </div>
</div>
<!--https://www.w3.org/WAI/tutorials/tables/irregular/ Pour faire une table avec ce format-->
@Html.ValidationSummary(false, "", new { @class = "text-danger" })
<div class="row justify-content-center">
    <h5 class="text-center">Sélectionnez une date de debut et de fin pour affichage du calendrier </h5>
    <div class="container">
        <form asp-action="AfficherPlanningDuAu" asp-controller="Calendrier" asp-area="Calendrier" method="post">
            <div class="form-group row justify-content-center">
                <br />
                <div class="col-sm-4 col-md-4 col-lg-4">
                    <!--Date picker -->
                    <div class="form-group">
                        @Html.Label("Du : ")
                        <input class="form-control" name="DateDu" asp-for="@Model.DateDu" type="date" />
                        @Html.ValidationMessageFor(m => m.DateDu, "", new { @class = "text-danger" })
                        <!--<input type="text" class="form-control" id="datepickerdebut" placeholder="MM/DD/YYYY">-->
                    </div>
                </div>
                <div class="col-sm-4 col-md-4 col-lg-4">
                    <!--Date picker -->
                    <div class="form-group">
                        @Html.Label("Au : ")
                        <input class="form-control" name="DateAu" asp-for="@Model.DateAu" type="date" />
                        @Html.ValidationMessageFor(m => m.DateAu, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-4 col-md-4 col-lg-4">
                    <div class="form-group">
                        <br />
                        <input type="submit" class="btn btn-outline-success" value="Afficher Planning" />
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>
<hr />
<br />
<div class="row justify-content-center">
    <div class="fixed_head">
        <table class="table table-bordered table-sm">
            <thead>
                @*<colgroup span="2"></colgroup>*@
                @*<colgroup span="2"></colgroup>*@
                <tr class="text-center">
                    <th rowspan="2">Zones</th>
                    @for (int z = 0; z < Model.JoursCalendrier.Count(); z++)
                    {
                        <th colspan="2" scope="colgroup">@Model.JoursCalendrier[z].NomJour - @Model.JoursCalendrier[z].JourPourAffichage.ToShortDateString()</th>
                    }
                </tr>
                <tr>
                    @for (int z = 0; z < Model.JoursCalendrier.Count(); z++)
                    {
                        <th scope="col" class="second_header">Matin</th>
                        <th scope="col" class="second_header">Aprèm</th>
                    }
                </tr>
            </thead>

            <!-- Normalement 19 zones -->
            @for (int j = 0; j < Model.ListResasZone.Count(); j++)
            {
                <tr>
                    <td scope="row" class="first_col">
                        <strong>@Model.ListResasZone[j].NomZone</strong>
                        <span class="fas fa-caret-down" onclick="showEquipements(@Model.ListResasZone[j].IdZone.ToString())"></span>
                    </td>
                    @for (int i = 0; i < Model.ListResasZone[j].ListeDispoZonesDuAu.Count(); i++)
                    {
                        @if (Model.ListResasZone[j].ListeDispoZonesDuAu[i].IsZoneOccupeMatin == true)
                        {
                            <td style="background-color:#d8b1d4"></td>
                        }
                        else
                        {
                            <td></td>
                        }
                        @if (Model.ListResasZone[j].ListeDispoZonesDuAu[i].IsZoneOccupeAprem == true)
                        {
                            <td style="background-color:#d8b1d4"></td>
                        }
                        else
                        {
                            <td></td>
                        }
                    }
                </tr>
                @for (int y = 0; y < Model.ListResasZone[j].ListEquipementVsResa.Count(); y++)
                {
                    <tr class="hide" style="display:none" name="@Model.ListResasZone[j].IdZone.ToString()" id="@y">
                        <th style="color:gray" class="first_col">@Model.ListResasZone[j].ListEquipementVsResa[y].NomEquipement</th>
                        @for (int x = 0; x < Model.ListResasZone[j].ListEquipementVsResa[y].ListResasDuAu.Count(); x++)
                        {
                            <td style="background-color:@Model.ListResasZone[j].ListEquipementVsResa[y].ListResasDuAu[x].CouleurMatin">

                                @if (@Model.ListResasZone[j].ListEquipementVsResa[y].ListResasDuAu[x].ListResasMatin.Count() != 0 ||
                                    Model.ListResasZone[j].ListEquipementVsResa[y].ListResasDuAu[x].InfosIntervMatin.Count() != 0 ||
                                    Model.ListResasZone[j].ListEquipementVsResa[y].ListResasDuAu[x].ListResasMatinAdjRest.Count() !=0 )
                                {
                                    @for (int z = 0; z < Model.ListResasZone[j].ListEquipementVsResa[y].ListResasDuAu[x].ListResasMatin.Count(); z++)
                                    {
                                        if (Model.ListResasZone[j].ListEquipementVsResa[y].ListResasDuAu[x].ListResasMatin[z].Confidentialite == "Confidentiel")
                                        {
                                            <a href="#" onclick="DisplayModalInfo(@Model.ListResasZone[j].ListEquipementVsResa[y].ListResasDuAu[x].ListResasMatin[z].IdEssai)">
                                                <strong>Confidentiel </strong>
                                            </a>
                                        }
                                        else
                                        {
                                            <a href="#" onclick="DisplayModalInfo(@Model.ListResasZone[j].ListEquipementVsResa[y].ListResasDuAu[x].ListResasMatin[z].IdEssai)">
                                                <strong>Réservé</strong>
                                            </a>
                                        }
                                    }
                                    @for (int z = 0; z < Model.ListResasZone[j].ListEquipementVsResa[y].ListResasDuAu[x].InfosIntervMatin.Count(); z++)
                                    {
                                        <a href="#" onclick="DisplayModalInterv(@Model.ListResasZone[j].ListEquipementVsResa[y].ListResasDuAu[x].InfosIntervMatin[z].IdMaint)">
                                            <strong>Intervention </strong>
                                        </a>
                                    }                                   
                                }

                            </td>

                            <td style="background-color:@Model.ListResasZone[j].ListEquipementVsResa[y].ListResasDuAu[x].CouleurAprem">

                                @if (@Model.ListResasZone[j].ListEquipementVsResa[y].ListResasDuAu[x].ListResasAprem.Count() != 0 ||
                                   @Model.ListResasZone[j].ListEquipementVsResa[y].ListResasDuAu[x].InfosIntervAprem.Count() != 0 ||
                                   @Model.ListResasZone[j].ListEquipementVsResa[y].ListResasDuAu[x].ListResasApremAdjRest.Count() != 0)
                                {
                                    @for (int u = 0; u < Model.ListResasZone[j].ListEquipementVsResa[y].ListResasDuAu[x].ListResasAprem.Count(); u++)
                                    {
                                        if (Model.ListResasZone[j].ListEquipementVsResa[y].ListResasDuAu[x].ListResasAprem[u].Confidentialite == "Confidentiel")
                                        {
                                            <a href="#" onclick="DisplayModalInfo(@Model.ListResasZone[j].ListEquipementVsResa[y].ListResasDuAu[x].ListResasAprem[u].IdEssai)">
                                                <strong>Confidentiel</strong>
                                            </a>
                                        }
                                        else
                                        {
                                            <a href="#" onclick="DisplayModalInfo(@Model.ListResasZone[j].ListEquipementVsResa[y].ListResasDuAu[x].ListResasAprem[u].IdEssai)">
                                                <strong>Réservé </strong>
                                            </a>
                                        }

                                    }
                                    @for (int z = 0; z < Model.ListResasZone[j].ListEquipementVsResa[y].ListResasDuAu[x].InfosIntervAprem.Count(); z++)
                                    {
                                        <a href="#" onclick="DisplayModalInterv(@Model.ListResasZone[j].ListEquipementVsResa[y].ListResasDuAu[x].InfosIntervAprem[z].IdMaint)">
                                            <strong>Intervention</strong>
                                        </a>
                                    }
                                }
                            </td>
                        }
                    </tr>
                }
            }
        </table>
    </div>
</div>

<div id="modal_data_resa"></div>

<div id="modal_data_interv"></div>

@section Scripts
{
    <!-- JS includes -->
    <script type="text/javascript">
        function showEquipements(parameter) {
            var divName = document.getElementsByName(parameter);
            var i;
            for (i = 0; i < divName.length; i++) {
                var ele = divName[i];
                if (ele.style.display == "") {
                    ele.style.display = "none";
                } else {
                    ele.style.display = "";
                }
            }
        }

        function DisplayModalInfo(id) {
            if (id) //Vérifier que l'id contient une valeur
            {
                $.ajax({
                    url: "@Url.Action("VoirInfosEssai", "Calendrier", new { Area = "Calendrier" })?id=" + id,
                    type: 'POST',
                    success: function (html) { // si Action s'exécute bien alors on charge le contenu html sur la page actuel sans altérer les actions utilisateur
                        $("#modal_data_resa").html(html);
                        $("#InfoResaJour").modal('show');
                    }
                });
            }
        }

        function DisplayModalInterv(id) {
            if (id) //Vérifier que l'id contient une valeur
            {
                $.ajax({
                    url: "@Url.Action("VoirInfosInterv", "Calendrier", new { Area = "Calendrier" })?id=" + id,
                    type: 'POST',
                    success: function (html) { // si Action s'exécute bien alors on charge le contenu html sur la page actuel sans altérer les actions utilisateur
                        $("#modal_data_interv").html(html);
                        $("#InfoIntervJour").modal('show');
                    }
                });
            }
        }

        // Lien pour l'ajax et recharge d'une vue partielle (j'ai pas su l'implémenter)
        // https://stackoverflow.com/questions/51114427/cant-update-partial-view-with-ajax-asp-net-core-mvc
    </script>
}